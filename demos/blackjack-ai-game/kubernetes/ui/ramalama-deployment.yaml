apiVersion: apps/v1
kind: Deployment
metadata:
  name: ramalama
  namespace: blackjack-ai-demo
  labels:
    app: ramalama
    component: ai-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ramalama
  template:
    metadata:
      labels:
        app: ramalama
        component: ai-service
    spec:
      containers:
      - name: ramalama
        image: quay.io/ramalama/ramalama:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: MODEL
          value: "llama3.2:1b"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8080"
        command: 
        - "ramalama"
        - "serve"
        - "--host"
        - "0.0.0.0"
        - "--port"
        - "8080"
        - "llama3.2:1b"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
          limits:
            memory: "8Gi"
            cpu: "4"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: model-cache
          mountPath: /.local
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: ramalama-models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ramalama-service
  namespace: blackjack-ai-demo
  labels:
    app: ramalama
spec:
  selector:
    app: ramalama
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ramalama-models-pvc
  namespace: blackjack-ai-demo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi